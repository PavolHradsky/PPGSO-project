<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="underwater_world" targetName="shaders" />
      <config projectName="underwater_world" targetName="ppgso" />
      <config projectName="underwater_world" targetName="underwater_world" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="10c89984-403d-4021-a0b6-3b81849e0231" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/underwater_world/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/a.exe" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/a.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/a.exe" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/a.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/FindOpenMP/ompver_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/FindOpenMP/ompver_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/FindOpenMP/ompver_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/FindOpenMP/ompver_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/clion-environment.txt" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/clion-environment.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/rules.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/Bubble.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/Bubble.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/Water.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/Water.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/CMakeFiles/underwater_world.dir/src/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/compile_commands.json" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/compile_commands.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/cmake-build-debug/underwater_world.exe" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/cmake-build-debug/underwater_world.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/data/models/10014_dolphin_v2_max2011_it2.obj" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/data/models/dolphin.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/src/Fish.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/src/Fish.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/src/Fish.h" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/src/Fish.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/underwater_world/src/Scene.h" beforeDir="false" afterPath="$PROJECT_DIR$/underwater_world/src/Scene.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2022" />
    <option name="minorVersion" value="2.4" />
  </component>
  <component name="ProjectId" id="2H2X38DoQlUIj4SJEfSMG27MqHG" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/peter/OneDrive/Documents/Projekt ppgso/PPGSO-project&quot;
  }
}</component>
  <component name="RunManager" selected="CMake Application.underwater_world">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="ppgso" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="underwater_world" TARGET_NAME="ppgso" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="shaders" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="underwater_world" TARGET_NAME="shaders" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="underwater_world" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="underwater_world" TARGET_NAME="underwater_world" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="underwater_world" RUN_TARGET_NAME="underwater_world">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.ppgso" />
      <item itemvalue="CMake Application.shaders" />
      <item itemvalue="CMake Application.underwater_world" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="10c89984-403d-4021-a0b6-3b81849e0231" name="Changes" comment="" />
      <created>1667483949379</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1667483949379</updated>
      <workItem from="1667483950795" duration="66000" />
      <workItem from="1667484524910" duration="188000" />
      <workItem from="1667484828607" duration="812000" />
      <workItem from="1667634339782" duration="1896000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>